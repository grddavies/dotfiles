// Setting sync is per platform
// Move this file to the appropriate folder to be used by VSCode
[
  // ## VSCode-NeoVim only
  {
    // Comment line(s) in vscode-nvim
    "key": "alt+/",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.init",
    "args": "<A-/>"
  },
  {
    // Comment line(s) blockwise in vscode-nvim
    "key": "alt+shift+/",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.init",
    "args": "<A-S-/>"
  },
  {
    // Move lines up arrow
    "key": "alt+up",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.init",
    "args": "<A-Up>"
  },
  {
    // Move lines up k
    "key": "alt+k",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.init",
    "args": "<A-k>"
  },
  {
    // Move lines down arrow
    "key": "alt+down",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.init",
    "args": "<A-Down>"
  },
  {
    // Move lines down j
    "key": "alt+j",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.init",
    "args": "<A-j>"
  },
  {
    // Toggle sidebar with space + e when using vscode-neovim
    "key": "space e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert"
  },
  {
    // Yank to "+ register with space + y
    "key": "space y",
    "command": "vscode-neovim.send",
    "args": "<Space>y",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert"
  },
  {
    // Paste/put from "+ register with space + p
    "key": "space p",
    "command": "vscode-neovim.send",
    "args": "<Space>p",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert"
  },
  // ### Telescope Maps
  {
    "key": "space s f",
    "command": "workbench.action.quickOpen",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert "
  },
  // ### TreeSitter incremental selection
  {
    // Init selection
    "key": "ctrl-space",
    "command": "vscode-neovim.send",
    "args": "<c-space>",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert"
  },
  {
    // Increment node
    "key": "ctrl-space",
    "command": "vscode-neovim.send",
    "args": "<c-space>",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert"
  },
  {
    // Increment scope
    "key": "ctrl-'",
    "command": "vscode-neovim.send",
    "args": "<c-'>",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert"
  },
  {
    // Decrement node
    "key": "ctrl-;",
    "command": "vscode-neovim.send",
    "args": "<c-;>",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert"
  },
  // ### End Treesitter Incremental selection
  // ### LSP (keymaps mirrored in nvim)
  {
    // Show hover help
    "key": "shift-k",
    "command": "editor.action.showHover",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert"
  },
  {
    // Show signature help
    "key": "ctrl-k",
    "command": "editor.action.triggerParameterHints",
    "when": "editorTextFocus && neovim.init && editorHasSignatureHelpProvider"
  },
  {
    // Toggle signature help
    "key": "ctrl-k",
    "command": "closeParameterHints",
    "when": "editorTextFocus && neovim.init && editorHasSignatureHelpProvider && parameterHintsVisible"
  },
  {
    // Rename symbol
    "key": "space r n",
    "command": "editor.action.rename",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert && editorHasRenameProvider && !editorReadonly"
  },
  {
    // Go to Definition
    "key": "space g d",
    "command": "editor.action.revealDefinition",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert && editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "alt+n",
    "command": "editor.action.wordHighlight.next",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "alt+shift+n",
    "command": "editor.action.wordHighlight.prev",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    // Format document
    "key": "shift+alt+f",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "space c a",
    "command": "editor.action.quickFix",
    "when": "neovim.init && neovim.mode != insert && editorHasCodeActionsProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  // ### End LSP
  {
    // Toggle fold
    "key": "z a",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert"
  },
  // ## Override VSCode Defaults when using NVim
  // ### Autocomplete menu navigation with Tab/S-Tab
  {
    "key": "tab",
    "command": "-insertBestCompletion",
    "when": "neovim.init && neovim.mode == insert && atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "enter",
    "command": "insertBestCompletion",
    "when": "neovim.init && neovim.mode == insert && atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "selectNextQuickFix",
    "when": "neovim.init && neovim.mode == insert && editorFocus && quickFixWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevQuickFix",
    "when": "neovim.init && neovim.mode == insert && editorFocus && quickFixWidgetVisible"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "neovim.init && neovim.mode == insert && editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "neovim.init && neovim.mode == insert && editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  }
]
