// vi:ft=jsonc
// Setting sync is per platform
// Move this file to the appropriate folder to be used by VSCode
[
  // ## VSCode-NeoVim only
  // ### Comment
  {
    // Comment line(s) in vscode-nvim
    "key": "alt+/",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.init",
    "args": "<A-/>"
  },
  {
    // Comment line(s) blockwise in vscode-nvim
    "key": "alt+shift+/",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.init",
    "args": "<A-S-/>"
  },
  // ### Move lines
  {
    // Move lines up k
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly && neovim.init && neovim.mode != insert"
  },
  {
    // Move lines down j
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly && neovim.init && neovim.mode != insert"
  },
  // ### Layout
  {
    // Toggle sidebar with space + e when using vscode-neovim
    // The complementary keymap to open the sidebar is set in nvim
    "key": "space e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "filesExplorerFocus && neovim.init && neovim.mode != insert"
  },
  // ### TreeSitter incremental selection
  {
    // Init selection / increment node
    "key": "ctrl-space",
    "command": "vscode-neovim.send",
    "args": "<c-space>",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert"
  },
  {
    // Decrement node
    "key": "ctrl-backspace",
    "command": "vscode-neovim.send",
    "args": "<C-BS>",
    "when": "editorTextFocus && neovim.init && neovim.mode != insert"
  },
  // ### Move cursor to prev word
  {
    "key": "alt+p",
    "command": "editor.action.wordHighlight.prev",
    "when": "neovim.init && neovim.mode != insert && editorTextFocus && hasWordHighlights"
  },
  // Format document
  {
    "key": "shift+alt+f",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  // ## Override VSCode default settings when using NVim
  // ### Autocomplete/snippet menu navigation with Tab/S-Tab
  {
    "key": "tab",
    "command": "-insertBestCompletion",
    "when": "neovim.init && neovim.mode == insert && atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "enter",
    "command": "insertBestCompletion",
    "when": "neovim.init && neovim.mode == insert && atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "selectNextQuickFix",
    "when": "neovim.init && neovim.mode == insert && editorFocus && quickFixWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevQuickFix",
    "when": "neovim.init && neovim.mode == insert && editorFocus && quickFixWidgetVisible"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "neovim.init && neovim.mode == insert && editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "neovim.init && neovim.mode == insert && editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+/",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  }
]
